{  "createdwith": "Open Stage Control",  "version": "1.14.5",  "type": "session",  "content":  {    "type": "root",    "id": "root",    "visible": true,    "interaction": true,    "comments": "Script generated from PureData https://github.com/jyg/stage",    "width": 500,    "height": 500,    "colorText": "auto",    "colorWidget": "auto",    "alphaFillOn": "auto",    "padding": "auto",    "html": "",    "css": "",    "colorBg": "rgba(235,235,235,1)",    "layout": "default",    "justify": "start",    "gridTemplate": "",    "contain": true,    "scroll": true,    "innerPadding": true,    "verticalTabs": false,    "hideMenu": false,    "traversing": false,    "value": "",    "default": "",    "linkId": "",    "address": "auto",    "preArgs": "",    "typeTags": "",    "decimals": 2,    "target": "",    "ignoreDefaults": false,    "bypass": true,    "onCreate": "",    "onValue": "",    "widgets": [            {        "type": "button",        "id": "reset",        "left": 3,        "top": 18,        "visible": true,        "interaction": true,        "width": 100,        "height": 100,        "expand": false,        "comments": "",        "colorText": "rgba(0,0,0,0.05)",        "colorStroke": "rgba(0,0,0,1)",        "colorWidget": "auto",        "colorFill": "rgba(252,252,252,1)",        "alphaStroke": 1,        "alphaFillOff": 1,        "alphaFillOn": 1,        "lineWidth": 2,        "padding": 2,        "html": "",        "css": "font-size:1300%;",        "colorTextOn": "rgba(0,0,0,1)",        "label": "‚óè",        "vertical": true,        "wrap": false,        "on": 1,        "off": 0,        "mode": "toggle",        "doubleTap": false,        "value": "",        "default": "",        "linkId": "",        "address": "auto",        "preArgs": "",        "typetags": "",        "decimals": 2,        "target": "",        "ignoreDefaults": false,        "bypass": true,        "onCreate": "",        "onValue": "if(value==1) send(\"/reset-BNG\",\"bang\")"        },            {        "type": "text",        "left": 20,        "top": 38,        "id": "2-LABEL",        "visible": true,        "comments": "",        "width": 60,        "height": 18,        "expand": false,        "colorText": "rgba(0,0,0,1)",        "colorStroke": "rgba(0,0,0,0)",        "colorWidget": "rgba(0,0,0,0)",        "colorFill": "rgba(0,0,0,0)",        "alphaStroke": 0,        "alphaFillOff": 0,        "alphaFillOn": 1,        "lineWidth": "auto",        "padding": "auto",        "html": "",        "css": "font-size:120%;",        "vertical": false,        "wrap": false,        "align": "left",        "value": "RESET",        "default": "",        "linkId": "",        "address": "auto",        "preArgs": "",        "typetags": "",        "decimals": 2,        "target": "",        "onCreate": "",        "onValue": ""        },            {        "type": "canvas",        "id": "my_lcd",        "left": 1,        "top": 123,        "visible": true,        "interaction": true,        "width": 500,        "height": 376,        "expand": false,        "comments": "",        "colorText": "auto",        "colorStroke": "rgba(0,0,0,1)",        "colorWidget": "rgba(0,0,0,1)",        "colorFill": "rgba(255,255,212,1)",        "alphaStroke": "auto",        "alphaFillOff": 1,        "alphaFillOn": "auto",        "lineWidth": "auto",        "padding": 0,        "html": "",        "css": "",        "valueLength": 3,        "autoClear": false,        "continuous": false,        "value": "",        "default": "",        "linkId": "",        "address": "auto",        "preArgs": "",        "typetags": "",        "decimals": 2,        "target": "",        "ignoreDefaults": false,        "bypass": false,        "onCreate": "locals.queue = []\n locals.fillColor = \"black\"\n locals.drawColor = \"black\"\n locals.lineWidth = 1\n locals.cursorx = 0\n locals.cursory = 0",        "onValue": "locals.queue.push(value)",        "onTouch": "// onTouch\nvar _output=[0,0,0]\n// store normalized coordinates\nif (event.type == \"start\") {\n    locals.x = event.offsetX / width\n    locals.y = event.offsetY / height\n    _output[0] = 1\n    _output[1] = locals.x\n    _output[2] = locals.y\n   //  value[0] = 1\n  //  value[1] = locals.x\n  //  value[2] = locals.y\n\n} \nelse if (event.type == \"stop\")\n{\n    locals.x = event.offsetX / width\n    locals.y = event.offsetY / height\n    _output[0] = 0\n    _output[1] = locals.x\n    _output[2] = locals.y\n//    value[0] = 0\n//    value[1] = locals.x\n//    value[2] = locals.y\n}\nelse\n{\n    // when the pointer is moving, increment coordinates\n    // because offsetX and offsetY may not be relevant\n    // if the pointer hovers a different widgets\n//    value[0]= 2\n    _output[0] = 2\n    locals.x += event.movementX / width\n    locals.y += event.movementY / height\n    _output[1] = locals.x\n    _output[2] = locals.y\n//    value[1] = locals.x\n//    value[2] = locals.y\n  \n}\n// apply limits\nvar x = Math.max(0, Math.min(1, _output[1])),\n    y = Math.max(0, Math.min(1, _output[2]))\n// send touch event to osc target\nsend(\"/my_lcd\",_output[0],x,y)",        "onDraw": "\nfor (var i in locals.queue) {\n  \n  var data = locals.queue[i]\n  \n  if (data[0]==\"clear\")\n  {\n    ctx.beginPath()\n    ctx.clearRect(0, 0, width,height)\n  }\n  \n  else if (data[0]==\"moveto\")\n  {\n      ctx.beginPath() \n      ctx.moveTo(data[1] * width, data[2]*height)\n   \n      locals.cursorx = data[1]*width\n      locals.cursory = data[2]*height\n  }\n  //else \n  else if (data[0]==\"lineto\")\n  {\n   \n    // use locals.drawColor property as stroke color\n    ctx.strokeStyle = locals.drawColor\n    ctx.lineWidth = locals.lineWidth\n    ctx.lineTo(data[1] * width, data[2]*height)\n    // draw stroke\n    ctx.stroke()\n  }\n  else if (data[0]==\"frameoval\")\n  {\n     ctx.moveTo(locals.cursorx+data[1] * width,locals.cursory)\n     ctx.strokeStyle = locals.drawColor\n     ctx.ellipse(locals.cursorx,locals.cursory,data[1] * width, data[2]*height,0,0, 2 * Math.PI)\n     ctx.stroke()\n  }\n  else if (data[0]==\"paintoval\")\n  {\n     ctx.strokeStyle = locals.drawColor\n     ctx.ellipse(locals.cursorx,locals.cursory,data[1] * width, data[2]*height,0,0, 2 * Math.PI)\n     ctx.fillStyle = locals.fillColor\n     ctx.fill();\n  }\n  else if (data[0]==\"penwidth\")\n    locals.lineWidth=data[1]\n  else if (data[0]==\"fillColor\")\n    locals.fillColor=data[1]\n  else if (data[0]==\"color\")\n    locals.drawColor=data[1]\n  else if (data[0]==\"rect\")\n    {\n      ctx.fillStyle = locals.fillColor\n      ctx.fillRect (locals.cursorx,locals.cursory,data[1]*width,data[2]*height)\n    }\n}\n\nlocals.queue = []\n"        }      ]    }  }